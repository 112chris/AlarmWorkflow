<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlarmSourceDisposeException" xml:space="preserve">
    <value>An exception occurred while disposing alarm source '{0}'. Please check the log.</value>
  </data>
  <data name="AlarmSourceEnabled" xml:space="preserve">
    <value>Alarm source '{0}' enabled.</value>
  </data>
  <data name="AlarmSourceEnabling" xml:space="preserve">
    <value>Enabling alarm source '{0}'...</value>
  </data>
  <data name="AlarmSourceInitializing" xml:space="preserve">
    <value>Initializing Alarmsource '{0}'...</value>
  </data>
  <data name="AlarmSourceNoOperation" xml:space="preserve">
    <value>Alarm Source '{0}' did not return an operation! This may indicate that parsing an operation has failed. Please check the log!</value>
  </data>
  <data name="AlarmSourceReceivedOperation" xml:space="preserve">
    <value>Received operation '{0}' by Alarm Source '{1}'.</value>
  </data>
  <data name="AlarmSourceStartException" xml:space="preserve">
    <value>Error initializing alarm source '{0}'. It will not run.</value>
  </data>
  <data name="AlarmSourceStarting" xml:space="preserve">
    <value>Starting Alarmsource '{0}'.</value>
  </data>
  <data name="AlarmSourceThreadException" xml:space="preserve">
    <value>An unhandled exception occurred while running the thread for alarm source '{0}'. The thread is being terminated. Please check the log.</value>
  </data>
  <data name="EngineStarted" xml:space="preserve">
    <value>Engine started successfully.</value>
  </data>
  <data name="EngineStartFailedNoAlarmSourceException" xml:space="preserve">
    <value>Service failed to start because there are no running alarm sources! Please check the log.</value>
  </data>
  <data name="EngineStarting" xml:space="preserve">
    <value>Starting Engine...</value>
  </data>
  <data name="EngineStopped" xml:space="preserve">
    <value>Engine is now stopped.</value>
  </data>
  <data name="EngineStopping" xml:space="preserve">
    <value>Stopping Engine...</value>
  </data>
  <data name="FDResourceConfigurationParseError" xml:space="preserve">
    <value>Could not parse setting value. Maybe it is ill-formed. The instance will have no items. See log for further information.</value>
  </data>
  <data name="FileNameMustBeAbsolute" xml:space="preserve">
    <value>The file path must be in absolute format!</value>
  </data>
  <data name="InitializedOperationStore" xml:space="preserve">
    <value>Using operation store '{0}' .</value>
  </data>
  <data name="JobExecuteAsyncFailed" xml:space="preserve">
    <value>An error occurred while processing the asynchronous job '{0}'!</value>
  </data>
  <data name="JobExecuteAsyncStart" xml:space="preserve">
    <value>Beginning execution of async job '{0}' in phase '{1}'...</value>
  </data>
  <data name="JobExecuteFinished" xml:space="preserve">
    <value>Finished execution of job '{0}'.</value>
  </data>
  <data name="JobExecuteSyncFailed" xml:space="preserve">
    <value>An error occurred while processing the synchronous job '{0}'!</value>
  </data>
  <data name="JobExecuteSyncStart" xml:space="preserve">
    <value>Beginning execution of sync job '{0}' in phase '{1}'...</value>
  </data>
  <data name="JobManagerDisposeJobFailed" xml:space="preserve">
    <value>The job '{0}' failed at dispose. This may have unpredictable consequences.</value>
  </data>
  <data name="NewAlarmHandlingException" xml:space="preserve">
    <value>An exception occurred while processing the operation! Please check the log!</value>
  </data>
  <data name="NewAlarmHandlingFinished" xml:space="preserve">
    <value>Finished handling operation with ID '{0}'.</value>
  </data>
  <data name="NewAlarmInvalidTimestamp" xml:space="preserve">
    <value>Could not parse timestamp from the fax. Using the current time as the timestamp.</value>
  </data>
  <data name="NewAlarmStored" xml:space="preserve">
    <value>Stored operation with ID '{0}'.</value>
  </data>
  <data name="NewAlarmStoreOperationFailedMessage" xml:space="preserve">
    <value>Storing the operation to the operation store failed! See log for information.</value>
  </data>
  <data name="SettingIdentifierNotFoundExceptionMessage" xml:space="preserve">
    <value>No setting identifier with the name '{0}' has been found!</value>
  </data>
  <data name="SettingNotFoundExceptionMessage" xml:space="preserve">
    <value>No setting with the name '{0}' has been found!</value>
  </data>
  <data name="SettingsConfigurationEmbResInvalidValueContent" xml:space="preserve">
    <value>Encountered not supported node type of '{0}' in setting '{1}'. Only plain values and CDATA-nodes are currently supported!</value>
  </data>
  <data name="SettingsConfigurationEmbResLoaded" xml:space="preserve">
    <value>Loaded settings configuration from assembly '{0}'.</value>
  </data>
  <data name="SettingsConfigurationEmbResParseFailed" xml:space="preserve">
    <value>Parsing of settings configuration file from assembly '{0}' failed. The file may contain invalid or missing information that is expected to be present in the specified configuration version.</value>
  </data>
  <data name="SettingsConfigurationEmbResXmlException" xml:space="preserve">
    <value>The settings configuration file found in assembly '{0}' contains invalid XML data! The error message was: {1}</value>
  </data>
  <data name="SettingsDisplayConfigurationEmbResLoaded" xml:space="preserve">
    <value>Loaded settings display configuration from assembly '{0}'.</value>
  </data>
  <data name="SettingsDisplayConfigurationEmbResXmlException" xml:space="preserve">
    <value>The settings display configuration file found in assembly '{0}' contains invalid XML data! The error message was: {1}</value>
  </data>
  <data name="SettingsDisplayConfigurationNotFoundException" xml:space="preserve">
    <value>There was no SettingsDisplayConfiguration found in this instance. Perhaps this instance was not initialized with "IncludeDisplayConfiguration" or it was and the configuration is not available at this point.</value>
  </data>
  <data name="ExpressionNotSupportedExceptionMessage" xml:space="preserve">
    <value>The expression '{0}' led to an unsupported member, thus it cannot be retrieved. Please revise this expression or remove it if not needed.</value>
  </data>
  <data name="JobGenericError" xml:space="preserve">
    <value>An error occurred while initializing job type '{0}'. The error message was: {1}</value>
  </data>
  <data name="JobInitializeBegin" xml:space="preserve">
    <value>Initializing job type '{0}'...</value>
  </data>
  <data name="JobInitializeError" xml:space="preserve">
    <value>Job type '{0}' initialization failed. The job will not be executed.</value>
  </data>
  <data name="JobInitializeSuccess" xml:space="preserve">
    <value>Job type '{0}' initialization successful.</value>
  </data>
  <data name="ServiceProviderRegisteredService" xml:space="preserve">
    <value>Registered service type '{0}' (instance type: {1}).</value>
  </data>
  <data name="PrintingQueueCopyCountMustBeGreaterThanZero" xml:space="preserve">
    <value>The copy count must be greater than zero!</value>
  </data>
  <data name="PrintingQueueNameMustNotBeEmpty" xml:space="preserve">
    <value>The printing queue must have a valid name!</value>
  </data>
  <data name="PrintingQueueParseErrorCopyCountIsInvalid" xml:space="preserve">
    <value>Encountered invalid copy count for printing queue '{0}'. Using default of '{1}' for this queue.</value>
  </data>
  <data name="PrintingQueueParseErrorNameIsInvalid" xml:space="preserve">
    <value>Ignoring printing queue with invalid name. Please check configuration!</value>
  </data>
  <data name="GdiPrinterPrintTaskException" xml:space="preserve">
    <value>An exception occurred while printing using GDI.</value>
  </data>
  <data name="PrintingDone" xml:space="preserve">
    <value>Done printing of page {0}.</value>
  </data>
  <data name="PrintIterationEnd" xml:space="preserve">
    <value>Finished iteration.</value>
  </data>
  <data name="PrintIterationStart" xml:space="preserve">
    <value>Beginning print iteration {0}/{1}...</value>
  </data>
  <data name="PrintTaskPrintPageException" xml:space="preserve">
    <value>An error occurred while printing page '{0}'. The printing task will be aborted.</value>
  </data>
  <data name="UsedPrinterDoesNotSupportThatMuchCopies" xml:space="preserve">
    <value>The selected printer does not support printing more than {0} copies natively (you requested: {1}). Using alternative method of printing copies.</value>
  </data>
  <data name="GdiPrinterPrintingQueueIsNotValid" xml:space="preserve">
    <value>The printing queue '{0}' is not valid. Printing will be canceled. Please check if PrintServer and PrinterName are properly configured.</value>
  </data>
  <data name="ErrorWhileInvokingUserExpressionResolver" xml:space="preserve">
    <value>An error occurred while invoking user-provided expression resolver. A default value will be used for this expression. Please see log for further information.</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="SettingsInfoXsd" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\resources\settings.info.xsd;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="SettingsXsd" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\resources\settings.xsd;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="SettingsManagerScanSettingsDisplayConfigurationFinished" xml:space="preserve">
    <value>Finished scan of setting display configurations in {0} milliseconds.</value>
  </data>
  <data name="SettingsManagerScanSettingsFinished" xml:space="preserve">
    <value>Finished scan of setting definitions in {0} milliseconds.</value>
  </data>
  <data name="UserSettingsXsd" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\resources\user.settings.xsd;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="SettingsManagerUserSettingsFileInvalid" xml:space="preserve">
    <value>The user.settings is malformed! Personalized user settings cannot be loaded. Please review your file. If you are sure that you haven't done any custom modifications to this file, please contact the team.</value>
  </data>
  <data name="SettingsManagerUserSettingsFileLoaded" xml:space="preserve">
    <value>User settings loaded.</value>
  </data>
  <data name="SettingsManagerUserSettingsFileSkip" xml:space="preserve">
    <value>User settings file does not exist; skipping.</value>
  </data>
  <data name="CustomScriptExecutionExceptionMessage" xml:space="preserve">
    <value>An error occurred while invoking the custom script.</value>
  </data>
  <data name="CustomScriptInvocationFailed" xml:space="preserve">
    <value>(Script file could not be executed because it contained errors. Please check the log file for details.)</value>
  </data>
  <data name="CustomScriptExecutionExceptionNotExactlyOneExportedTypeFound" xml:space="preserve">
    <value>Either zero or more than one exported (public) type was found in the script. Valid scripts shall contain exactly one public, non-static type.</value>
  </data>
  <data name="CustomScriptExecutionExceptionCompilationFailed" xml:space="preserve">
    <value>The compilation of the script has failed. Please see the log for information.</value>
  </data>
  <data name="CustomScriptExecutionExceptionScriptFunctionMethodHasWrongSignature" xml:space="preserve">
    <value>The script function has an invalid signature. The script function shall have the following signature: 'public static string Function(object graph)'.</value>
  </data>
  <data name="CustomScriptExecutionExceptionScriptFunctionNotFound" xml:space="preserve">
    <value>There was no script function found! The script function shall have the following signature: 'public static string Function(object graph)'.</value>
  </data>
  <data name="CustomScriptExecutionExceptionUndefined" xml:space="preserve">
    <value>(Undefined reason. This indicates an internal error. Please report.)</value>
  </data>
  <data name="CustomScriptExecutionExceptionScriptInvocationException" xml:space="preserve">
    <value>An exception was thrown by the script; it did not finish sucessfully.</value>
  </data>
  <data name="CustomScriptCompilationFinished" xml:space="preserve">
    <value>Compilation process took {0} milliseconds.</value>
  </data>
  <data name="CustomScriptCompilationWithErrorsWarnings" xml:space="preserve">
    <value>There were {0} errors/warnings during compilation of script '{1}'.</value>
  </data>
  <data name="CustomScriptExecutionExceptionScriptFileNotFound" xml:space="preserve">
    <value>The script file was not found! Please check it exists.</value>
  </data>
  <data name="AssertionFailedGenericMessage" xml:space="preserve">
    <value>An assertion has failed</value>
  </data>
  <data name="AssertionFailedExceptionNotEmpty" xml:space="preserve">
    <value>The value '{0}' shall not be empty!</value>
  </data>
  <data name="AssertionFailedExceptionNotNull" xml:space="preserve">
    <value>The value '{0}' shall not be null!</value>
  </data>
  <data name="ProcessDataEvent" xml:space="preserve">
    <value>Process data event: {0}</value>
  </data>
  <data name="ProcessErrorEvent" xml:space="preserve">
    <value>Process error event: {0}</value>
  </data>
  <data name="ProgramFinished" xml:space="preserve">
    <value>Program '{0}' has finished with exit code {1}.</value>
  </data>
  <data name="ProgramStart" xml:space="preserve">
    <value>Starting program '{0}' with arguments '{1}'...</value>
  </data>
</root>